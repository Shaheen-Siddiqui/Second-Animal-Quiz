{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport QuestionBank from './ArrayData';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  console.log(QuestionBank.length);\n  let [QuestionCount, setQuestionCount] = useState(0);\n  let [tryPageHide, setTryPageHide] = useState(false);\n\n  const PitchureChange = () => {\n    const NextData = QuestionCount + 1;\n\n    if (QuestionCount < QuestionBank.length) {\n      setQuestionCount(NextData);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n\n_s(App, \"yvLBzIU5au6WCoOEumvpB976CN4=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/navgurukul/second-animal-quize/src/App.js"],"names":["React","useState","QuestionBank","App","console","log","length","QuestionCount","setQuestionCount","tryPageHide","setTryPageHide","PitchureChange","NextData"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,YAAP,MAAyB,aAAzB;;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChBC,EAAAA,OAAO,CAACC,GAAR,CAAYH,YAAY,CAACI,MAAzB;AACF,MAAI,CAACC,aAAD,EAAeC,gBAAf,IAAiCP,QAAQ,CAAC,CAAD,CAA7C;AACA,MAAI,CAACQ,WAAD,EAAaC,cAAb,IAA6BT,QAAQ,CAAC,KAAD,CAAzC;;AAGA,QAAMU,cAAc,GAAC,MAAI;AACxB,UAAMC,QAAQ,GAAEL,aAAa,GAAC,CAA9B;;AACD,QAAIA,aAAa,GAACL,YAAY,CAACI,MAA/B,EAAuC;AACrCE,MAAAA,gBAAgB,CAACI,QAAD,CAAhB;AACD;AAGA,GAPD;;AASA,sBAAQ,qCAAR;AA2BC,CA1CD;;GAAMT,G;;KAAAA,G;AA4CN,eAAeA,GAAf","sourcesContent":["import React, { useState } from 'react'\nimport QuestionBank from './ArrayData'\n\nconst App = () => {\n  console.log(QuestionBank.length);\nlet [QuestionCount,setQuestionCount]=useState(0);\nlet [tryPageHide,setTryPageHide]=useState(false)\n\n\nconst PitchureChange=()=>{\n const NextData =QuestionCount+1\nif (QuestionCount<QuestionBank.length) {\n  setQuestionCount(NextData) \n}\n\n\n}\n\nreturn (<>\n{/* \n{<div> tryPageHide?\n      (<div className=\"TryagainBox\">\n      <h1>**!!GAME ENDED!!**</h1>\n      <h2 className='Chances'><strong>5 chances over </strong> you did very Well</h2> <br />\n      <h4 className='playaGain'>You want to play again </h4>\n      <button className='tryAgainBtn btn btn-danger'>Play again </button>\n      </div>)\n\n    :(<div className='backImage'>\n    <h1><span>Question {QuestionCount} /</span> {QuestionBank.length-1} </h1>\n    <img className='ImgStyle' src={QuestionBank[QuestionCount].AnimalPic} alt=\"Animal_image\" />\n    <h4>Choose the correct answer </h4>\n    <div className='btn-fild'>\n{\n  QuestionBank[QuestionCount].buttonOptions.map((Btnoptions,index)=>{\n    return <button onClick={PitchureChange}  className=\"btn btn-dark\"> {Btnoptions.option} </button>\n  })\n}\n      </div>\n      \n      </div>)\n      </div>}  */}\n      \n\n</>)\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}